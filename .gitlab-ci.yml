---
image: registry.fi-ts.io/cloud-native/go-builder:latest

stages:
  - lint
  - validate
  - test
  - deploy

sources:
  stage: validate
  variables:
    VERSION_GOLANGCI_LINT: "1.16.0"
  script:
    - curl --fail --location --remote-name --show-error https://github.com/golangci/golangci-lint/releases/download/v${VERSION_GOLANGCI_LINT}/golangci-lint-${VERSION_GOLANGCI_LINT}-linux-386.tar.gz
    - tar --extract --file golangci-lint-${VERSION_GOLANGCI_LINT}-linux-386.tar.gz
    - chmod +x golangci-lint-${VERSION_GOLANGCI_LINT}-linux-386/golangci-lint
    - golangci-lint-${VERSION_GOLANGCI_LINT}-linux-386/golangci-lint run

test-data:
  stage: validate
  image: ubuntu:19.04
  variables:
    BLOBSTORE_URL: https://blobstore.fi-ts.io
    FRR_FILES: "frr.conf.firewall frr.conf.machine"
    FRR_TAG: ubuntu-19.04
    INTERFACES_FILES: "interfaces.firewall interfaces.machine"
    TESTDATA_DIR: "./internal/netconf/testdata/"
  script:
    - apt-get update --quiet --quiet
    - apt-get install --yes --no-install-recommends curl
    - curl --fail --location --show-error --remote-name ${BLOBSTORE_URL}/metal/frr-${FRR_TAG}.tar.gz
    - apt-get install --yes --no-install-recommends --quiet --quiet ifupdown2 ./frr_*.deb ./frr-pythontools_*.deb ./libyang*.deb
    - for input in ${FRR_FILES}; do /bin/echo ${input}; vtysh --dryrun --inputfile ${TESTDATA_DIR}/${input}; done
    - for input in ${INTERFACES_FILES}; do /bin/echo ${input}; ifup --syntax-check --all -i ${TESTDATA_DIR}/${input}; done

unit-tests:
  stage: test
  script:
    - make test

.blobstore_tpl: &blobstore
  stage: deploy
  script:
    - make
    - strip bin/metal-networker
    - tar -czvf metal-networker.tar.gz -C ./bin metal-networker -C ../internal/netconf/ interfaces.firewall.tpl interfaces.machine.tpl frr.machine.tpl frr.firewall.tpl rules.v4.tpl rules.v6.tpl systemd.link.tpl systemd.network.tpl hosts.tpl hostname.tpl
    - curl -fLS https://dl.minio.io/client/mc/release/linux-amd64/mc -o /usr/local/bin/mc
    - chmod +x /usr/local/bin/mc
    - mc config host add fits https://blobstore.fi-ts.io $ACCESS_KEY "${SECRET_KEY}"
    - mc cp metal-networker.tar.gz fits/cloud-native/metal-networker-${suffix}.tar.gz

# This job is triggered only for a "stable" tagged branch to always have a version that is known to work properly.
stable:
  <<: *blobstore
  variables:
    suffix: stable
  only:
    - stable

# This job is triggered for every pipeline that runs in master branch to have bleeding edge version.
latest:
  <<: *blobstore
  variables:
    suffix: latest
  only:
    - master
